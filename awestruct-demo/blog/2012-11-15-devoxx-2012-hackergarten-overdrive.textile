---
layout: post
title: Devoxx 2012 Hackergarten Overdrive!
author: mojavelinux
tags: [ event, testing, community ]
---
h3. Kick-off

!(pull-right)/images/blog/devoxx2012/hackergarten-voting.jpg! Each project represented at Hackergarten briefly introduced itself and presented ideas to hack on. The presence of Red Hat community projects was very strong (~75%). We're happy to report that there was lots of interest in Arquillian. It received the most votes for hacking, with JBoss Forge drawing in the second most.

h3. General impressions

The Hackergarten was held in open areas at the back of the pavilion. The areas gave plenty of privacy, but also gave people freedom to move around. We didn't have to experience that awkwardness of peeking through a door or the distraction of doors opening and closing. We were able to do demos in one section without affecting hacks or discussions going on in other sections because there was enough ambient noise, mostly music from the trade floor. The wired connections provided by switches at each table removed the distraction of getting on wifi, although it took a bit of time and some shuffling around in the morning to figure all that out.

Once we knew to get everyone plugged into the switches, we were off to the hacking races!

h3. Pictures!

!/images/blog/devoxx2012/thucydides-show-and-tell.jpg!

See more pictures in "Album 1":https://plus.google.com/u/0/photos/117676046064764850842/albums/5810277955405607153 and "Album 2":https://plus.google.com/u/0/photos/117676046064764850842/albums/5810332735729924609.

<div style="float: right; width: 375px;">

h3. Hacking Overview (related to testing)

<div class="abstracts">
h3. Code Contributions

* "Arquillian Drone + FluentLenium":https://github.com/papousek/arquillian-extension-fluentlenium
** Related hack: "Thucydides + FluentLenium":https://github.com/MathildeLemee/thucydides/tree/fluentLenium
* "Arquillian Gradle Plugin":https://github.com/aslakknutsen/arquillian-gradle-plugin
* "Arquillian Ape (persistence)":https://github.com/bartoszmajsak/devoxx12-ape demo code
* Improvements to "Arquillian Transaction":https://github.com/bartoszmajsak/arquillian-extension-transaction/commit/a4e3ee02953053d9c05b4f821279d2ad192b4753
* "EJB injection":https://github.com/arquillian/arquillian-container-cloudbees/commit/2c31cd22a244337babc433cf233215cd0b2f7adb for "Arquillian CloudBees adapter":https://github.com/arquillian/arquillian-container-cloudbees
* Bootstrap API for Thucydides
* Bootstrap API for NoSQLUnit
</div>


<div class="abstracts">
h3. Design Discussions

* Arquillian Drone + Thucydides
* Arquillian Ape + NoSQLUnit
* Drools rules, Drools decision tables and Drools planner for filtering, prioritizing and coordinating distribution of tests in a suite
* IntelliJ support for Arquillian, JBoss Forge
* Using the web browser as a "container" to incorporate JavaScript tests into a Drone test
* Juzu demo and shout out to use of Arquillian for testing
* Jersey looking into adoption of Arquillian in test suite
* Using Thucydides for CDI test suite and supporting spec documentation
</div>

</div>

h3. Activity Stream (related to testing)

* At the start of the event, I suggested the hack idea to integrate Arquilliun Drone and "FluentLenium":https://github.com/FluentLenium/FluentLenium to "Jan Papou≈°ek":https://github.com/papousek
** Jan and I introduced ourselves to "Mathilde Lemee":https://github.com/MathildeLemee and they got to work on the integration straight away, starting off by sharing with each other how their respective projects worked.
** By days end, they completed a "working integration":https://github.com/papousek/arquillian-extension-fluentlenium
** Mathilde also "integrated FluentLenium with Thucydides":https://github.com/MathildeLemee/thucydides/tree/fluentLenium ("2 CDs"); stay tuned because that integration and the integration with Drone may become one and the same
** In both cases, the integration with FluentLenium was so straightforward (and thus hackable) because of the nice "abstraction layer":https://github.com/FluentLenium/FluentLenium/blob/master/fluentlenium-core/src/main/java/org/fluentlenium/core/FluentAdapter.java Mathilde created that handled bootstrapping FluentLenium
* Aslak hacked with "Hans Dockter":https://twitter.com/hans_d, creator of Gradle, on a "gradle deployment plugin":https://github.com/aslakknutsen/arquillian-gradle-plugin that uses Arquillian Containers to handle life cycle of dozens of containers (application servers, servlet containers and beyond)
* "Bartosz Majsak":http://twitter.com/majson hacked on a demo for "Arquillian Ape":https://github.com/arquillian/arquillian-extension-persistence and "enhanced":https://github.com/bartoszmajsak/arquillian-extension-transaction/commit/a4e3ee02953053d9c05b4f821279d2ad192b4753 "Arquillian Transaction":https://github.com/arquillian/arquillian-extension-transaction to work both in-container and embedded
* I spoke with two of the IntelliJ developers (Peter and Yann) about:
** a plugin for Arquillian (similar to the "Eclipse Arquillian plugin":https://github.com/snjeza/arquillian-eclipse)
** adding an embedded Forge shell with UI interplay (similar to the JBoss Forge view in JBoss Tools)
* I chatted with "Julien Viet":https://twitter.com/julienviet about:
** use of "Arquillian for testing portlets":https://github.com/arquillian/arquillian-extension-portal in isolation and within the portal container
** treating the web browser as a "container" to incorporate JavaScript testing into a Drone test ("prototype":https://github.com/lfryc/arquillian-qunit, "proposal":https://community.jboss.org/wiki/GSoC12Ideas#Automate_JavaScript_tests_in_an_integration_environment_using_Arquillian)
* Later in the day, Julien gave a presentation and demo of "Juzu":https://github.com/juzu/juzu, excited to say it's "tested w/ Arquillian Core and Arquillian Drone":https://github.com/juzu/juzu/blob/master/core/src/test/java/juzu/test/AbstractWebTestCase.java
* I brainstormed with "Geoffrey De Smet":https://github.com/ge0ffrey, lead of Drools Planner, about:
** using rules to handle the filtering decision for tests
** the role decision tables can play in declaring conditions for which tests to run
** optimizing test suite execution using Drools Planner and distributing tests over a grid
* I spoke with "John Smart":http://twitter.com/wakeleo about Arquillian Core and Arquillian Drone integration with "Thucydides":http://thucydides.info
** We discussed how much the two projects align and what it would take to integrate
** We concluded the first step is adding a bootstrap API in Thucydides, which he began to flesh out, that could be hooked to the Arquillian event model and all the integrations with individual test runners can be done once in Arquillian
** We talked about how Drone could likely provide management of WebDriver
** John Smart has been busy all week working on a bootstrap API for Thucydides (hacking on it with an ATDD approach, of course)
* "Koen Aers":https://github.com/koentsje gave a demonstration of the JBoss Forge integration in JBoss Tools, talked about each of elements it brings to the Forge experience in the IDE
** Koen wrote his first "Hello, World" IntelliJ plugin to get spun up and prepare to help with the integration
** IntelliJ said they would put it on their roadmap and support the effort where possible
* "Alex Soto":https://github.com/lordofthejars and Bartosz discussed integrating NoSQLUnit into Arquillian Ape (peristence extension)
** These projects closely align and it pushes Arquillian's definition of container management forward
** I told Marek Jelen about Alex's "NoSQLUnit demo":https://github.com/lordofthejars/nosql-unit/tree/master/nosqlunit-demo of testing MongoDB on OpenShift through the port forwarding setup by JBoss Tools; a blog entry may be in the works;
** Arquillian + NoSQLUnit has lots of application, one of which may be testing NoSQL backends in the Infinispan project
* "Alexis Hassler":http://twitter.com/alexishassler was busy improving the Arquillian adapter for CloudBees by adding "EJB injection support":https://github.com/arquillian/arquillian-container-cloudbees/commit/2c31cd22a244337babc433cf233215cd0b2f7adb.
* Aslak discussed with JAX-RS lead about using Arquillian for JAX-RS TCK; not likely soon, but Jersey is entertaining idea of using Arquillian to test Jersey (JAX-RS reference implementation)
* I spoke with Paul Bakker briefly about combining the "Forge Arquillian plugin":https://github.com/forge/plugin-arquillian and the "Forge Arquillian Extension plugin":https://github.com/mojavelinux/forge-plugin-arquillian-extensions into one code base
* I brainstormed with "David Blevins":http://twitter.com/dblevins, lead of TomEE, about the role a test suite can play in the early and in-progress development of a specification
** proposed idea of using a ATDD approach where tests could be not only marked as pending (before a ref impl is in place), but also proposed, open question and alternative
** agreed that using tests can focus the discussion about the spec, clarify ambiguities & resolve different interpretations
** John Smart gave a demo of Thucydides and we contemplated using it for the CDI test suite

h3. Wrap-up

As the event wound down, I discussed with Andres Almiray, who organized the Hackergarten, about what went on during the day, whether Hackergarten accomplished his goals. He talked about the importance of giving people a chance to make a concrete contribution, give them a win to take home with them, lower perception of a barrier to contributing. I talked to him about the fact that Hackergarten is a catalyst for ideas, some of which come into play before the event, already successful and is also ongoing throughout the week, so we'll only know total impact once conference is over. Some ideas take time to soak. I can attest, we're still hacking ;)

Finally, Arquillian was invited to join the "Nighthacking Tour":http://steveonjava.com/nighthacking/ hosted by Steven Chin on on Wednesday night, so look for that coverage when it comes online.

h3. What people were tweeting...

* Bartosz Majsak ("@majson":http://twitter.com/majson) "posted":https://twitter.com/majson/status/268386503560949760: #devoxx #arquillian @aslakknutsen you have some pull requests
* Markus Eisele ("@myfear":http://twitter.com/myfear) "posted":https://twitter.com/myfear/status/268326931567628289: What could be the next cool #Arquillian feature? creative @aslakknutsen at the  #hackergarden http://twitpic.com/bcv2lv
* Alexis Hassler ("@AlexisHassler":http://twitter.com/AlexisHassler) "posted":https://twitter.com/AlexisHassler/status/268327078951264257: GREEN BAR on my #arquillian test. Cloudbees Container Adapter is getting further, thanks to @majson & @aslakknutsen
* Aslak Knutsen ("@aslakknutsen":http://twitter.com/aslakknutsen) "posted":https://twitter.com/aslakknutsen/status/268295841536700416: Hacking #Arquillian Container control plugin for #SBT & #Leiningen. #Gradle next...
* Jan Papousek ("@jan_papousek":http://twitter.com/jan_papousek) "posted":https://twitter.com/jan_papousek/status/268326970113269761: @MathildeLemee the first attempt of integration FluentLenium and Arquillian is here https://github.com/papousek/arquillian-extension-fluentlenium
* Mathilde Lemee ("@MathildeLemee":http://twitter.com/MathildeLemee) "posted":https://twitter.com/MathildeLemee/status/268293223762509825: integrating FluentLenium to Arquillian Drone with @jan_papousek
* John Smart ("@wakaleo":http://twitter.com/wakaleo) "posted":https://twitter.com/wakaleo/status/268361581530841089: Awesome concentrated hacking session with @MathildeLemee: integrating #thucydides and FluentLenium in less than 10 lines of code.
* Alex Soto ("@alexsotob":http://twitter.com/alexsotob) "posted":https://twitter.com/alexsotob/status/268474599174447104: @majson Back home ty Arquillian guys for treat me as one of your team
