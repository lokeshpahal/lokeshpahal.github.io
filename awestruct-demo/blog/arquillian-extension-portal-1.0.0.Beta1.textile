---
date: 2013-01-31
author: kenfinnigan
---

h3. Highlighted Features

- <i class="icon-star"></i> Shrinkwrap Archive type for portlets :=
We now have @PortletArchive@ for creating Shrinkwrap archives for portlets. ("read more":#portlet-archive) =:

- <i class="icon-star"></i> Helpers for creating portlet.xml :=
Within @PortletArchive@ there are some simple helpers for creating the contents of portlet.xml. ("read more":#portlet-descriptor-helper) =:

h3(#portlet-archive). Shrinkwrap Archive type for portlets

We can now use @PortletArchive@ instead of @WebArchive@ when we're creating micro deployments for testing a portlet. In it includes methods for setting the content of portlet.xml without needing to specify the path, in a similar manner that @WebArchive@ provides setWebXML() methods.

h3(#portlet-descriptor-helper). Helpers for creating portlet.xml

@PortletArchive@ also adds some nice helpers for creating @GenericPortlet@ or @GenericFacesPortlet@ portlet definitions within portlet.xml. A @GenericPortlet@ can be added to portlet.xml by:

bc(prettify).. Shrinkwrap.create(PortletArchive.class)
	.createSimplePortlet(MyPortletClass.class);

p. And adding a portlet for JSF is:

bc(prettify).. Shrinkwrap.create(PortletArchive.class)
	.createFacesPortlet("portletName", "Portlet Title", "index.xhtml");

p. For examples on how to use these extensions with their respective portal containers, you can take a look at the "testsuite":https://github.com/portletbridge/portletbridge/tree/master/core/impl/src/test/integration/org/jboss/portletbridge/it of Portlet Bridge.

We look forward to hearing your feedback about this release in the "community forums":#{site.project_space}!
