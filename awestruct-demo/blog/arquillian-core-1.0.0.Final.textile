---
---
!(graphic pull-right)/images/arquillian_glossy_no_shadow_icon.png! Just over two years ago, "we announced":/blog/2010/03/11/arquillian-1-alpha-1-released the first alpha release of Arquillian. We were excited back then to present a new way of testing where tests execute inside the container. We started out offering only support for testing Java EE and a handful of containers adapters.

Today, we are announcing the 1.0.0.Final release of Arquillian, now a sophisticated integration and functional testing platform that's been rearchitected since it's debut and is enhanced by a plethora of container adapters, test runners, extensions and tool plugins.

Over that two year period, Arquillian and our vision for it has matured dramatically. The goal, however, has remained the same: to make integration (and functional) tests as simple to write as unit tests. Now we just want it to be way more powerful and handle a whole lot more scenarios.

The community has also grown significantly. Over 100 people have contributed to either Arquillian or ShrinkWrap. Several of those contributors are leading one or more modules. Not only do the contributions of these community members help the projects move forward, they bring ideas that take Arquillian down new pathways in pursuit of more advanced, capable and intelligent tests while at the same time driving down the effort to write them.

*Thanks to all of you who have contributed to the Arquillian project!!* The "army of contributors":/community/contributors are the true heros of the Arquillian invasion!

Now for some details...

Since 1.0.0.CR8, the following component upgrades have been introduced, which are defined in the Arquillian BOM(Bill of Materials):

* ShrinkWrap 1.0.0
* ShrinkWrap Resolver 1.0.0-beta-6
* ShrinkWrap Descriptors 2.0.0-alpha-2

The ShrinkWrap Descriptor 2 release is quite different from the 1.x series, but it's the way forward :)

The implementation jar, which previously had the artifactId @shrinkwrap-descriptors-impl@, has been split into three artifacts:

* @shrinkwrap-descriptors-impl-javaee@ - Java EE 5 & 6 Descriptors
* @shrinkwrap-descriptors-impl-jboss@ - JBoss AS Specific Descriptors
* @shrinkwrap-descriptors-impl-misc@ - Jetty Descriptors

When upgrading to ShrinkWrap Descriptor 2, expect all package names and fluent APIs to have changed. The API still has the same feel, so it shouldn't be too hard to make the transition. Here's an example of how the new API looks:

bc(prettify). Descriptors.create(BeansDescriptor.class)
	.createDecorators().clazz(MyDecorator.class.getName()).up()
	.createAlternatives().clazz(MyAlternative.class.getName()).up()
	.exportAsString()
