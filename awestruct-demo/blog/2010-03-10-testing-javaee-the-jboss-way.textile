---
layout: post
title: Testing Java EE the JBoss way
author: pmuir
tags: [ testing, mission, roadmap, announcement ]
---
Recently, we've been working hard on a solution to improve the testability of "Java EE":http://in.relation.to/Bloggers/YouShouldUpgradeToJavaEE6, and particularly "JBoss AS":http://www.jboss.org/jbossas/. I'm pleased to say that a critical piece of puzzle, "Arqullian":http://arquillian.org, is now available. Congratulations to "Aslak":profile://aslak and the Arquillian team for releasing the first alpha of Arquillian! You can read more about Arquillian's mission, and our plans for Java EE testing below; alternatively, there are some quick links at the bottom if you want to dive right in.

bq.. The mission of the Arquillian project is to provide a simple test harness that developers can use to produce a broad range of integration tests for their Java applications (most likely enterprise applications). A test case may be executed within the container, deployed alongside the code under test, or by coordinating with the container, acting as a client to the deployed code.
 
Arquillian defines two styles of container, remote and embedded. A remote container resides in a separate JVM from the test runner. Its lifecycle may be managed by Arquillian, or Arquillian may bind to a container that is already started. An embedded container resides in the same JVM and is mostly likely managed by Arquillian. Containers can be further classified by their capabilities. Examples include a fully compliant Java EE application server (e.g., GlassFish, JBoss AS, Embedded GlassFish), a Servlet container (e.g., Tomcat, Jetty) and a bean container (e.g., Weld SE). Arquillian ensures that the container used for testing is pluggable, so the developer is not locked into a proprietary testing environment.
 
Arquillian seeks to minimize the burden on the developer to carry out integration testing by handling all aspects of test execution, including:

<ul><li>managing the lifecycle of the container (start/stop),</li><li>bundling the test class with dependent classes and resources into a deployable archive,</li><li>enhancing the test class (e.g., resolving @Inject, @EJB and @Resource injections),</li><li>deploying the archive to test (deploy/undeploy) and</li><li>capturing results and failures.</li></ul>

To avoid introducing unnecessary complexity into the developer's build environment, Arquillian integrates transparently with familiar testing frameworks (e.g., JUnit 4, TestNG 5), allowing tests to be launched using existing IDE, Ant and Maven test plugins without any add-ons.
 
_*{text-align: right; display: block; color: #555;}The Arquillian Mission Statement*_
 
p. The first alpha release of Arquillian gives us support for "JBoss AS":http://www.jboss.org/jbossas/ (remote deployments), "GlassFish":http://glassfish.dev.java.net/ (embedded deployments), "Weld SE":https://docs.jboss.org/weld/reference/1.0.0/en-US/html/environments.html#d0e5064 (embedded deployments) and "OpenEJB":http://openejb.apache.org/ (embedded deployments). You can also inject beans and component (using @@Resource@ or @@Inject@) into test cases.
 
We'll be adding supported containers in future releases - if you want to see your favorite container on the list, "join our community":http://community.jboss.org/en/arquillian and we can show you how to add support for it. We also plan to add more convention over configuration, meaning you'll only need to specify a single deployment and reuse it in all your test cases. Aslak has written more about future ideas in a "follow-up blog entry":/blog/2010/03/11/arquillian-1-alpha-1-released announcing the 1.0.0 Alpha 1 release. In that entry he also provides some examples of how to use Arquillian.
 
We're strong believers in writing tests, and writing tests which actually test your business logic in the environment it will finally run in, rather than introducing mocked out objects (which may behave differently). While unit testing is important to ensure the correctness of your logic, it does not ensure the correctness of two objects which interact with each other.
 
With the help of the "ShrinkWrap":http://jboss.org/shrinkwrap project, Arquillian gives you the ability to create micro-deployments around your tests. Micro-deployments are contained sub-sections of your application logic. This gives you the ability to do lower level integration testing on a lower level then normal integration. It is up to you at what level you want to test!
 
We also know you need a convenient way to run your test quickly, and that is why we are getting "JBoss Embedded AS":http://community.jboss.org/docs/DOC-13843 in shape. Embedded AS offers the potential to bootstrap JBoss AS inside the same JVM when you run your test, making it super easy to debug the test. Unfortunately, Embedded AS support didn't make this release (we made a decision to release what we have now, rather than delay), but we will push this out to you as soon as it's ready.
 
Testing your components and services gets you a long way, but you'll nearly always want to test your presentation tier as well. And that's where frameworks like "JSFUnit":http://www.jboss.org/jsfunit and "Selenium":http://seleniumhq.org/ come in - they allow you to exercise the work flows your user will use. Support for both these frameworks is planned, as well as for "Mock JSF Objects":http://community.jboss.org/docs/DOC-14882.
 
If you like what you've heard so far, but are worried that Arquillian requires build script wizardry to use, let us surprise you again! Being able to run any of these tests from within the IDE is a key goal of Arquillian -- and the key to a rapid development cycle. Arquillian requires no build wizardry! So check out the "documentation":http://docs.jboss.org/arquillian/reference/1.0.0.Alpha1/en-US/html_single and give it a try today!
 
[ "Issues":https://issues.jboss.org/browse/ARQ | Javadoc: "API":http://docs.jboss.org/arquillian/api/1.0.0.Alpha1/, "SPI":http://docs.jboss.org/arquillian/spi/1.0.0.Alpha1/ | "Reference Guide":http://docs.jboss.org/arquillian/reference/1.0.0.Alpha1/en-US/html_single | "Release Notes":https://jira.jboss.org/jira/secure/ReleaseNote.jspa?projectId=12310885&styleName=Html&version=12313950 ]

_This post was syndicated from in.relation.to. See the "original blog entry":http://in.relation.to/Bloggers/TestingJavaEETheJBossWay to view older comments._
