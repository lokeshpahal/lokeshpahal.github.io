---
---

We're happy to announce the first release of the Arquillian Byteman marrige.

Byteman is a tool which simplifies tracing and testing of Java programs. Byteman allows you to insert extra Java code into your application, either as it is loaded during JVM startup or even after it has already started running. The injected code is allowed to access any of your data and call any application methods, including where they are private. You can inject code almost anywhere you want and there is no need to prepare the original source code in advance nor do you have to recompile, repackage or redeploy your application. In fact you can remove injected code and reinstall different code while the application continues to execute.

When testing your application you can use Byteman to inject faults or synchronization code, causing your application to perform unusual or unexpected operations required to exercise a test scenario. 

In this release we added support the @@BMRule(s)@ annotation on @Class@ and @Method@ level.

bc(prettify).. @RunWith(Arquillian.class)
@BMRules(
        @BMRule(
                name = "Throw exception on success",
                targetClass = "StatelessManagerBean",
                targetMethod = "success",
                action = "throw new java.lang.RuntimeException()")
)
public class BytemanFaultInjectionTestCase {

    @Deployment
    public static Archive<?> createDeployment() {
        return ShrinkWrap.create(WebArchive.class)
                .addClasses(StatelessManager.class, StatelessManagerBean.class);
    }
...
}


bc(prettify).. @Test(expected = EJBException.class)
@BMRule(
        name = "Throw exception on success",
        targetClass = "StatelessManagerBean",
        targetMethod = "success",
        action = "throw new java.lang.RuntimeException()")
public void shouldBeAbleToInjectMethodLevelThrowRule()
{
    Assert.assertNotNull("Verify bean was injected", bean);
    bean.success();
}

p. See the "Byteman Website":http://www.jboss.org/byteman for more on how to write rules.

Comming up is support for @@BMScript@ annotation and manual installment of rules during test execution.
