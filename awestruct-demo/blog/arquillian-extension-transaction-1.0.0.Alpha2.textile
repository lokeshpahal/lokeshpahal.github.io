---
date: 2012-11-01
---

h3. JTA implementation

p. The time has come to extract the JTA transactions support from "Arquillian Persistence Extension":/modules/persistence-extension and move it over to the Transaction Extension. It was in fact quite a natural refactoring step. This opens the possibility of providing a different transaction manager to your (not only) persistence related tests. Many thanks to "Jakub Narloch":https://github.com/jmnarloch for bringing the Transaction Extension to life as a top level module and helping with this release!

p(info). %Future releases of the "Arquillian Persistence Extension":/modules/persistence-extension will ship with the JTA extension implementation as a dependency, but the Persistence Extension API will change to the new API from the Transaction Extension. Since the Persistence Extension is using the transaction provider SPI you will be able to change the implementation without a need to adopt your test code to whatever comes in the future.%

h3. Usage

p. Just include this in your dependencies to leverage the JTA implementation within the container of your choice.

div(filename). pom.xml

bc(prettify).. <dependency>
  <groupId>org.jboss.arquillian.extension</groupId>
  <artifactId>arquillian-transaction-jta</artifactId>
  <version>1.0.0.Alpha2</version>
</dependency>

h3. New SPI hook

p. The @TransactionEnabler@ interface has been introduced to the *SPI*. It gives the option to alternate the strategy for enabling transactions. This is particularly handy for the Persistence Extension where we automatically wrap annotations like @@UsingDataSet@ or @@ShouldMatchDataSet@ in a transaction. For reference you may take a look at the "new SPI interface":https://github.com/arquillian/arquillian-extension-transaction/blob/master/spi/src/main/java/org/jboss/arquillian/transaction/spi/provider/TransactionEnabler.java and the related tests.

That's pretty much it! We look forward to hearing your feedback about this release in the "community forums":#{site.project_space}!

