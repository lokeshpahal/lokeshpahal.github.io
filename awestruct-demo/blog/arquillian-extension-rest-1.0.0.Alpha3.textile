---
author: aslakknutsen
---

- <i class="icon-star"></i> Support for Jersey as Rest-Client implementation :=

If you want to use Jersey as the backing framework for Rest-Client you can include the new artifact @arquillian-rest-client-impl-jersey@

bc(prettify).. <dependency>
  <groupId>org.jboss.arquillian.extension</groupId>
  <artifactId>arquillian-rest-client-impl-jersey</artifactId>
  <version>1.0.0.Alpha3</version>
</dependency>

p. Additional you need to add the dependencies on the Jersey version you would like to use.
=:

- <i class="icon-star"></i> Support for injection of @WebTarget@ in @@Test@ :=

bc(prettify).. @Test
public void banCustomerRaw(@ArquillianResteasyResource WebTarget webTarget)
{
  final Customer result = webTarget.path("/customer/1")
                           .request()
                           .post(null)
                           .readEntity(Customer.class);
}

p. The @WebTarget@ will be pre initialized with the web application base URL.

=:

- <i class="icon-star"></i> Support for @@Header@ and @@Headers@ on @@Test@ :=

bc(prettify).. @Test
@Header(name = "Authorization", value = "abc")
@Consumes(MediaType.APPLICATION_JSON)
public void banCustomer(@ArquillianResteasyResource CustomerResource customerResource)
{ .. }

p. This will simply set the _Authorization_ header on the @@WebTarget@ or proxy used when executing this request.
=:
