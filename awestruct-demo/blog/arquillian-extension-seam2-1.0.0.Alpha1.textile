---
---

h3. Some of the highlights in this release

p. Test enrichment for @@In@ injection points from the Seam 2 Context.

p. Packaging support for adding the Seam 2 framework.

p. Ability to override Seam and JBoss EL versions defined in POM (so you can easily check if you app works with different Seam versions). Default are JBoss Seam 2.2.2.Final and JBoss EL 1.0_02.CR5.

div(filename). arquillian.xml

bc(prettify).. <arquillian xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://jboss.org/schema/arquillian"
  xsi:schemaLocation="
      http://jboss.org/schema/arquillian
      http://jboss.org/schema/arquillian/arquillian_1_0.xsd">

  <extension qualifier="seam2">
    <property name="seamVersion">2.2.1.Final</property>
    <property name="jbossElVersion">1.0_02.CR6</property>
  </extension>

</arquillian>

p. Tests were verified on JBoss AS 4.2.3.GA and 5.1.0.Final (both managed and remote).

p. Example below shows simple Seam component and the way how to write Arquillian test using this extension.

bc(prettify).. @Name("fluidOuncesConverter")
public class FluidOuncesConverter {
    public Double convertToMillilitres(Double ounces) {
        return ounces * 29.5735296;
    }
}

@RunWith(Arquillian.class)
public class ComponentInjectionTestCase {
    @Deployment
    public static Archive<?> createDeployment() {
        return ShrinkWrap.create(WebArchive.class, "test.war")
                .addClass(FluidOuncesConverter.class)
                .addAsResource(EmptyAsset.INSTANCE, "seam.properties")
                .setWebXML("web.xml");
    }

    @In
    FluidOuncesConverter fluidOuncesConverter;

    @Test
    public void shouldInjectSeamComponent() throws Exception {
        assertThat(fluidOuncesConverter).isNotNull();
    }

    @Test
    public void shouldConvertFluidOuncesToMillilitres() throws Exception {
        // given
        Double ouncesToConver = Double.valueOf(8.0d);
        Double expectedMillilitres = Double.valueOf(236.5882368d);

        // when
        Double millilitres = fluidOuncesConverter.convertToMillilitres(ouncesToConver);

        // then
        assertThat(millilitres).isEqualTo(expectedMillilitres);
    }
}
