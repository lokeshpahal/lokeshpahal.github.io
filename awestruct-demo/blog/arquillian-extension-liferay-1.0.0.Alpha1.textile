---
author: csierra
date: 2015-02-03
---

h3. What is it?

Arquillian extension for Liferay is a set of tools to help developers test their Liferay plugins. 

It consists of:

* Arquillian Remote Container for Liferay (OSGi based)
* Arquillian Deployment Scenario Generator for OSGi SDK plugins based on BND
* Arquillian Deployment Scenario Generator for legacy Maven plugins

h3. How to use it?

h4. Arquillian Container for Liferay 

is a regular remote container. Just add it to your test classpath. 
It is based on Karaf remote container, so you can use the same configuration properties. However Liferay container changes some default values:
* @DEFAULT_JMX_SERVICE_URL@ = "service:jmx:rmi:///jndi/rmi://localhost:8099/jmxrmi"
* @DEFAULT_JMX_USERNAME@ = ""
* @DEFAULT_JMX_PASSWORD@ = ""
* @DEFAULT_HTTP_HOST@ = "localhost"
* @DEFAULT_HTTP_PORT@ = 8080
* @isAutostartBundle()@ == true

To configure your Liferay server you have to:
* Enable JMX (for example: @-Dcom.sun.management.jmxremote@ @-Dcom.sun.management.jmxremote.authenticate=false@ @-Dcom.sun.management.jmxremote.port=8099@ @-Dcom.sun.management.jmxremote.ssl=false@) in your application server
* Deploy "Aries JMX Extensions":http://aries.apache.org/modules/jmx.html into Liferay Server
* If you need more configuration options follow "these instructions":https://github.com/arquillian/arquillian-container-osgi#remote-container-setup.

In case you are using Liferay Plugins SDK 6.2 CE and tomcat you can use the target "setup-testable-tomcat" to configure tomcat to accept tests.

h4. Arquillian Deployment Scenario Generator for OSGi SDK plugins based on BND

If you are creating liferay OSGi plugins using plugins SDK simply add:

bc(prettify).. <dependency name="arquillian-deployment-generator-bnd" org="org.arquillian.liferay" rev="1.0.0.Alpha1" />

p. to your ivy.xml file and you don't need to specify a @@Deployment@ annotated static method in your test. The deployable archive will be generated for you using the plugin information in BND.

In case you need to specify a different BND file for the test archive use @BNDFile annotation to specify it.

You can find examples of use of these here:
* "content-targeting-test":https://github.com/liferay/liferay-apps-content-targeting/tree/master/content-targeting-test
* "JSONWebServiceTrackerTest":https://github.com/liferay/liferay-portal/blob/master/modules/portal/portal-json-web-service-extender/test/integration/com/liferay/portal/json/web/service/extender/test/JSONWebServiceTrackerTest.java

Just notice that package name changes have occurred since the publication of these examples. 

h4. Arquillian Deployment Scenario Generator for legacy Maven plugins

Just the same as BND generator this extension allows you to create tests without having to specify a @@Deployment@ static method. Test archive will be generated based on your pom.xml. 

This extension is independent of the container. You can even "configure it to use Tomcat":https://www.liferay.com/web/manuel.delapenya/blog to accept tests for legacy plugins.

More examples usage can be found in the "showcase":https://github.com/kameshsampath/liferay-arquillian-showcase.

