---
---
It's been a while since the "Alpha3 release":/2011/12/30/arquillian-extension-persistence-1-0-0-Alpha3. After three long months, we're excited to announce Alpha 4 with *a lot* of improvements and enhancements suggested by our great community. Best of all, we finally have "complete documentation in the reference guide":https://docs.jboss.org/author/display/ARQ/Persistence!

I would especially like to thank "Michael Brill":https://github.com/shogz for nailing down  DBUnit clean up strategies, "PÃ¥l Oliver Kristiansen":https://github.com/twistah and "Jarek Gilewski":https://github.com/jagin for suggesting customization of DBUnit behaviour and "Juergen Zimmermann":profile://Juergen.Zimmermann for spotting a bug with transactional support. Last, but not least, many thanks to all who actively discussed the roadmap for next releases. There is plenty of great stuff on the way! Thank you very much for your feedback!

h3(highlights). Some of the highlights in this release

- <i class="icon-star"></i> Custom SQL scripts for cleanup := You can now use custom SQL scripts to clean your database before or after the test. For this purpose use the @@CleanupUsingScript@ annotation and specify SQL files which have to be executed. 
- <i class="icon-star"></i> More flexible custom SQL scripts execution := We've removed the @@UsingScript@ annotation and replaced it with the @@ApplyScriptBefore@ and @@ApplyScriptAfter@ annotations.
- <i class="icon-star"></i> DBUnit insert strategies :=
You can tell DBUnit how it should insert your data. The following strategies are available:

* @INSERT@ - Performs insert of the data defined in provided data sets. _This is the default strategy_.
* @CLEAN_INSERT@ - Performs insert of the data defined in provided data sets, after removal of all data present in the tables referred in provided files.
* @REFRESH@ - During this operation, existing rows are updated and new ones are inserted. Entries already existing in the database which are not defined in the provided data set are not affected.
* @UPDATE@ - This strategy updates existing rows using data provided in the datasets. If the dataset contains a row which is not present in the database (identified by its primary key) then an exception is thrown. =:
- <i class="icon-star"></i> DBUnit cleanup modes :=
You can specify when and how you would like your database to be cleaned. By default, your database is *erased entirely* before each test. If you want to control this behavior, use the @@Cleanup@ annotation for this purpose. The following modes are currently supported:

* @STRICT@ - Cleans the entire database. This strategy might require turning off database constraints (e.g. referential integrity).
* @USED_ROWS_ONLY@ - Deletes only those entries that are defined in the datasets used for seeding.
* @USED_TABLES_ONLY@ - Deletes only those tables that are referenced in datasets.

You can also specify when you would like to invoke the cleanup procedure. For instance:

bc(prettify). @Cleanup(phase = TestExecutionPhase.AFTER, strategy = CleanupStrategy.USED_ROWS_ONLY)

You can invoke cleanup @BEFORE@ or @AFTER@ the test. You can also disable cleanup by using @TestExecutionPhase.NONE@. =:
- <i class="icon-star"></i> Column filtering for data set matching := @@ShouldMatchDatSet@ has been enhanced with @columnsToExclude@ list, where you can specify which columns shouldn't be used for database content verification.
- <i class="icon-star"></i> Nullable columns := For XML, JSON and YAML you can now set arbitary columns to @null@ using @[null]@ placeholder.
- <i class="icon-star"></i> Separated configuration for core and (enhanced) DBUnit specific features :=
*We provide configuration for all DBUnit properties and features as of Alpha 4!* Moreover there is a split for core properties (such as default data source or JNDI of UserTransaction) and DBUnit related settings, as the example below illustrates:

div(filename). arquillian.xml

bc(prettify).. <extension qualifier="persistence">
    <property name="defaultDataSource">java:app/datasources/mssql_ds</property>
    <property name="userTransactionJndi">java:jboss/UserTransaction</property>
    <property name="initStatement">scripts/mssql-identity-insert-on.sql</property>
    <property name="cleanupStatement">scripts/mssql-identity-insert-off.sql</property>
</extension>

<extension qualifier="persistence-dbunit">
    <property name="datatypeFactory">org.dbunit.ext.mssql.MsSqlDataTypeFactory</property>
    <property name="useIdentityInsert">true</property>
</extension>
=:

p. For complete list, please refer to the "reference guide":https://docs.jboss.org/author/display/ARQ/Persistence.

We look forward to hearing your feedback about this release in the "community forums":#{site.project_space}!
