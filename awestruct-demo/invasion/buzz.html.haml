---
layout: invasion
title: Transmissions
javascripts: [ /javascripts/jquery-tweet.js ]
---
%h2
  Tweets mentioning
  %a(href='http://twitter.com/#!/search/%23arquillian') #arquillian

.tweet
  :javascript
    $(function() {
      $(".tweet").tweet({
        query: "#arquillian",
        avatar_size: 48,
        count: 10,
        template: "{avatar}{user} posted {time}:<br/>{text}",
        loading_text: "Loading tweets...",
        //intro_text: 'Tweets mentioning <a href="https://twitter.com/#!/search/%23arquillian">#arquillian</a>',
        outro_text: 'See more results for <a href="https://twitter.com/#!/search/%23arquillian">#arquillian</a> on twitter.com...'
      });
    });

%h2 Reactions

%blockquote
  %p Arquillian is one of the most interesting projects in the JBoss portfolio. Not only due to its technical merits, which abound, but also because it makes it easy to argue that JBoss "gets it right" when it comes to high quality open source software. It's a real solution to a real challenge: integration testing for Java applications. A new idea for solving an old problem. That has moved from a proof of concept to an entire ecosystem incredibly fast. Because it's community-driven. And easy to learn. So it's cool.
  %small
    %span.author Marius Bogoevici
    %a.source(href='https://community.jboss.org/blogs/weekly-editorial/2012/04/13/this-week-in-jboss-12-april-2012-people-at-work') JBoss Weekly: Apr 12, 2012

%blockquote
  %p From its very beginning Arquillian kept his word and delivered what offered: to make integration testing a breeze. Being able to test your components over the application server just by setting up some classpath dependencies is just amazing. This combined to a lightning fast server start, moved integration testing from the nightly build to the local build. This changed software development permanently.
  %small
    %span.author Ivan Pazmino
    %a.source(href='http://iapazmino.me/2012/09/30/the-many-tools-for-testing') The many tools for testing

%blockquote
  %p Arquillian really is awesome. I am from the Meyer school of noise is a pernicious enemy. And delay is a form of noise. Having JBoss 6 running and just repeat running the tests from my key mapping is a freaking joy. Huge improvement over the Spring tests.
  %small
    %span.author Rob Williams
    %a.source(href='http://www.jroller.com/robwilliams/entry/arquillian_end_of_test_hell') Arquillian: End of Test Hell on Earth

%blockquote
  %p I recently got introduced to Arquillian. Arquillian is a JBoss project for providing better testing to the Java EE stack. Arquillian utilizes ShrinkWrap, another great project, for creating virtual archives as deployments to the container. It's all pretty damn slick :)
  %p I encourage you to take a dive into the community. It's well organized and alive.
  %small
    %span.author Ken Gullaksen
    %a.source(href='http://www.glxn.net/?p=175') two cents

%blockquote
  %p Thanks for a great product. This reminds me of the old Cactus project back in the day, but done much, much better.
  %small
    %span.author Laird Nelson
    %a.source(href='https://community.jboss.org/message/547089') Community Forums

%blockquote
  %p Testing through Arquillian is the only way to be really sure the generated app actually works, IMHO. Because you are testing it the way the user would.
  %small
    %span.author Richard Kennard, Forge contributor
    %a.source(href='http://lists.jboss.org/pipermail/forge-dev/2012-June/002137.html') forge-dev mailinglist

%blockquote
  %p I'd like to say that, the API design, the documentation and last but not least the quality of the code base is really impressive.
  %small
    %span.author Thomas Diesler (OSGi support contributor &amp; maintainer)
    %a.source(href='https://community.jboss.org/message/549599') Community Forums

%blockquote
  %p All in all Arquillian is a really great integration testing tool with full of potential. It's just great that the JBoss guys are aiming to provide support for almost all widely used application servers and web containers.
  %p If you are writing an application for the Java EE 6 stack while not using Arquillian is a serious mistake!
  %small
    %span.author Bartosz Majsak, Cambridge Technology Partners
    %a.source(href='http://ctpjava.blogspot.com/2010/07/test-drive-with-arquillian-and-cdi-part.html') Test drive with Arquillian and CDI (Part 1)

%blockquote
  %p ...using Arquillian, we were able to cut the setup needed to run a plugin in-container by 90% and we were able to introduce a number of convenience annotations from which you can get a variety of data injected into your unit tests.
  %small
    %span.author Lukáš Krejčí, RHQ developer
    %a.source(href='http://metlos.wordpress.com/2012/03/09/rhq-meets-arquillian') RHQ meets Arquillian

%blockquote
  %p Arquillian really rocks! It is a major achievement in reducing the time and complexity of integration testing. Go try it!
  %small
    %span.author Magnus Smith
    %a.source(href='http://java.dzone.com/articles/death-all-bugs-arquillian') Death to all bugs! 

%blockquote
  %p Demonstrating in-container behavior in Java has never been easier!
  %small
    %span.author Tommy Tynjä
    %a.source(href='https://twitter.com/tommysdk/status/276949889538195456') The Twitters

%blockquote
  %p [Arquillian] is a cute solution for a problem that bugs every Java EE programmer.
  %small
    %span.author Markus Eisele
    %a.source(href='http://www.youtube.com/watch?v=r7Mp0hHmBsQ') 2012 JBoss Community Leader Interview
